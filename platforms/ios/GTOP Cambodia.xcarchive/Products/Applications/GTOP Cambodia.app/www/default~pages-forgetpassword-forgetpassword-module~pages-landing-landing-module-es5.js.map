{"version":3,"sources":["src/app/pages/forgetpassword/forgetpassword.page.html","src/app/pages/forgetpassword/forgetpassword.page.scss","src/app/pages/forgetpassword/forgetpassword.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content>\\n  <img src=\\\"/assets/header-logo-blue.jpg\\\" class=\\\"ion-hide-md-up\\\">\\n\\n  <ion-text color=\\\"dark\\\">\\n    <h2 class=\\\"ion-text-center\\\">{{ 'APP.forgot_password' | translate }}</h2>\\n  </ion-text>\\n\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"sendOTP(form)\\\" method=\\\"post\\\" class=\\\"ion-padding\\\" *ngIf=\\\"!isSent && !isPinVerified\\\">\\n    <ion-item>\\n      <ion-text color=\\\"primary\\\">\\n        <h5 class=\\\"ion-text-center\\\">{{ 'FORGOT_PASSWORD_PAGE.enter_phone_to_reset_password' | translate }}</h5>\\n      </ion-text>\\n      <ion-label position=\\\"floating\\\">{{ 'APP.phone_number' | translate }}</ion-label>\\n      <ion-input ngModel type=\\\"tel\\\" name=\\\"phone\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-button expand=\\\"full\\\" color=\\\"primary\\\" type=\\\"submit\\\">{{ 'APP.submit' | translate }}</ion-button>\\n    <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" expand=\\\"full\\\" (click)=\\\"dismissForgetPassword()\\\"><ion-icon  src=\\\"assets/themify-icons/SVG/arrow-left.svg\\\"></ion-icon> &nbsp;&nbsp;&nbsp;&nbsp; {{ 'APP.back' | translate }}</ion-button>\\n  </form>\\n\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"verifyOTP(form)\\\" method=\\\"post\\\" class=\\\"ion-padding\\\" *ngIf=\\\"isSent && !isPinVerified\\\">\\n    <ion-item>\\n      <ion-text color=\\\"primary\\\">\\n        <h5 class=\\\"ion-text-center\\\">{{ 'APP.enter_otp' | translate }}</h5>\\n      </ion-text>      \\n      <ion-label position=\\\"floating\\\">{{ 'APP.otp_number' | translate }}</ion-label>\\n      <ion-input ngModel type=\\\"tel\\\" name=\\\"otp\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-button expand=\\\"full\\\" color=\\\"primary\\\" type=\\\"submit\\\">{{ 'APP.submit' | translate }}</ion-button>\\n    <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" expand=\\\"full\\\" (click)=\\\"backToSendingOTP()\\\" [disabled]=\\\"isBackable\\\"><ion-icon  src=\\\"assets/themify-icons/SVG/arrow-left.svg\\\"></ion-icon> &nbsp;&nbsp;&nbsp;&nbsp; {{ 'APP.back' | translate }} ({{ countDownTimer }})</ion-button>\\n  </form>\\n\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"resetPassword(form)\\\" method=\\\"post\\\" class=\\\"ion-padding\\\" *ngIf=\\\"isPinVerified\\\">\\n    <ion-item>\\n      <ion-text color=\\\"primary\\\">\\n        <h5 class=\\\"ion-text-center\\\">{{ 'FORGOT_PASSWORD_PAGE.enter_phone_new_password' | translate }}</h5>\\n      </ion-text>\\n      <ion-label position=\\\"floating\\\">{{ 'APP.password' | translate }}</ion-label>\\n      <ion-input ngModel type=\\\"password\\\" name=\\\"password\\\" required></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{ 'APP.confirm_password' | translate }}</ion-label>\\n      <ion-input ngModel type=\\\"password\\\" name=\\\"confirmPassword\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-button expand=\\\"full\\\" color=\\\"primary\\\" type=\\\"submit\\\">{{ 'APP.submit' | translate }}</ion-button>\\n    <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" expand=\\\"full\\\" (click)=\\\"backToSendingOTP()\\\"><ion-icon  src=\\\"assets/themify-icons/SVG/arrow-left.svg\\\"></ion-icon> &nbsp;&nbsp;&nbsp;&nbsp; {{ 'APP.back' | translate }}</ion-button>\\n  </form>\\n\\n</ion-content>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ZvcmdldHBhc3N3b3JkL2ZvcmdldHBhc3N3b3JkLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ModalController, NavController, LoadingController } from '@ionic/angular';\nimport { NgForm } from '@angular/forms';\nimport { LoginPage } from '../login/login.page';\nimport * as firebase from 'firebase';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FirebaseAuthentication } from '@ionic-native/firebase-authentication/ngx';\n\n@Component({\n  selector: 'app-forgetpassword',\n  templateUrl: './forgetpassword.page.html',\n  styleUrls: ['./forgetpassword.page.scss'],\n})\nexport class ForgetpasswordPage implements OnInit {\n\n  firebaseVerificationId;\n  fireabaseTokenId;\n  isSent = false;\n  phoneNumber;\n  password;\n  loading;\n  isBackable = false;\n  isPinVerified = false;\n  httpResponse:any;\n  public countDownTimer:string = '0:59';\n\n\n  constructor(\n    private modalController: ModalController,\n    private loadingController: LoadingController,\n    private alertService: AlertService,\n    private authService: AuthService,\n    private navCtrl: NavController,\n    private lang: TranslateService,\n    private firebaseAuthentication: FirebaseAuthentication\n  ) {\n  }\n\n  ngOnInit() {  \n  }\n\n  dismissForgetPassword() {\n    this.modalController.dismiss();\n  }\n\n  backToSendingOTP() {\n    this.isSent = false;\n    this.isPinVerified = false;\n    this.countDownTimer = '0:59';\n  }\n\n  sendOTP(form: NgForm){\n    this.phoneNumber = form.value.phone;\n    if( !navigator.onLine )\n    {\n      this.alertService.presentToast( this.lang.instant('APP.internet_not_work') ,\"danger\");\n      return;\n    }\n    if( this.phoneNumber.length < 9 ){\n      this.alertService.presentToast( this.lang.instant('APP.please_validate_phone') ,\"danger\");\n      return;\n    }\n    this.presentLoading();\n    this.authService.verifyPhone(this.phoneNumber).subscribe( data => {\n      this.httpResponse = data;\n      this.phoneNumber = this.httpResponse.phone;\n\n      // *******************************\n      // Firebase Start Sending OTP\n      // *******************************\n      this.firebaseAuthentication.verifyPhoneNumber(this.phoneNumber, 30000).then((verificationID) => {\n        this.isSent = true;\n        this.startTimer(60);\n        this.loading.dismiss();\n        this.firebaseVerificationId = verificationID;\n      }).catch((error) => {\n        this.alertService.presentToast(\"<ion-text class=\\\"ion-text-center\\\">\" + error + \"</ion-text>\",\"danger\");\n      });\n      // *******************************\n      // END Firebase Start Sending OTP\n      // *******************************\n      \n    }, err => {\n      if( err.error.message ){\n        this.alertService.presentToast( err.error.message ,\"danger\");\n      }\n      else{\n        this.alertService.presentToast( err.message ,\"danger\");\n      }\n      this.loading.dismiss();\n    });\n  }\n\n  // verifyOTP(form: NgForm){\n  //   if( !navigator.onLine )\n  //   {\n  //     this.alertService.presentToast( this.lang.instant('APP.internet_not_work') ,\"danger\");\n  //     return;\n  //   }\n  //   this.presentLoading();\n  //   let credential = firebase.auth.PhoneAuthProvider.credential(this.firebaseVerificationId, form.value.otp);\n  //   firebase.auth().signInWithCredential(credential).then(()=>{\n  //     firebase.auth().currentUser.getIdToken(true).then(idToken=>{\n  //       this.fireabaseTokenId = idToken;\n  //       this.authService.verifyToken( this.fireabaseTokenId ).subscribe(\n  //         data => {\n  //           this.httpResponse = data;\n  //         }, err => {\n  //           if( err.error.message ){\n  //             this.alertService.presentToast( err.error.message ,\"danger\");\n  //           }\n  //           else{\n  //             this.alertService.presentToast( err.message ,\"danger\");\n  //           }\n  //           this.loading.dismiss();\n  //         }, () => {\n  //           this.isPinVerified = true;\n  //           this.alertService.presentToast( this.httpResponse.message ,\"success\");\n  //           this.loading.dismiss();\n  //         }\n  //       );\n  //     }).catch(error => {\n  //       this.loading.dismiss();\n  //       this.alertService.presentToast( error ,\"danger\");\n  //     });  \n  //   }).catch((error)=>{\n  //     this.loading.dismiss();\n  //     this.alertService.presentToast( error ,\"danger\");\n  //   });\n  // }\n\n  // resetPassword(form: NgForm){\n  //   if( !navigator.onLine )\n  //   {\n  //     this.alertService.presentToast( this.lang.instant('APP.internet_not_work') ,\"danger\");\n  //     return;\n  //   }\n  //   if( form.value.password.length < 6 ){\n  //     this.alertService.presentToast( this.lang.instant('APP.password_must_be_greater_than_6') ,\"danger\");\n  //     return;\n  //   }\n  //   if( form.value.password != form.value.confirmPassword ){\n  //     this.alertService.presentToast( this.lang.instant('APP.password_does_not_match') ,\"danger\");\n  //     return;\n  //   }\n  //   this.presentLoading();\n  //   this.password = form.value.password;\n  //   this.authService.resetPassword( this.fireabaseTokenId, form.value.password, form.value.confirmPassword ).subscribe(\n  //     data => {\n  //       this.httpResponse = data;\n  //       this.authService.login(this.phoneNumber, this.password).subscribe( data => {\n  //         this.alertService.presentToast( this.httpResponse.message ,\"success\");\n  //         this.dismissForgetPassword();\n          \n  //         if(this.authService.isLoggedIn && this.authService.isVerified) {\n  //           this.navCtrl.navigateRoot('/dashboard');\n  //         }\n  //         else if(this.authService.isLoggedIn && !this.authService.isVerified){\n  //           this.navCtrl.navigateRoot('/pending');\n  //         }\n          \n  //       }, err => {\n  //         if( err.error.message )\n  //           this.alertService.presentToast( err.error.message ,\"danger\");\n  //         else\n  //           this.alertService.presentToast( err.message ,\"danger\");\n  //         this.loading.dismiss();\n  //       });\n  //     }, err => {\n  //       if( err.error.message )\n  //         this.alertService.presentToast( err.error.message ,\"danger\");\n  //       else\n  //         this.alertService.presentToast( err.message ,\"danger\");\n  //       this.loading.dismiss();\n  //     }, () => {\n  //       this.loading.dismiss();\n  //     }\n  //   );\n  // }\n\n  async presentLoading() {\n    this.loading = await this.loadingController.create({\n      message: 'Please wait',\n      duration: 30000\n    });\n    await this.loading.present();\n  }\n\n  startTimer(startSec) {\n    setTimeout(() => {\n      startSec --;\n      if( startSec > 10 )\n        this.countDownTimer = '0:' + startSec;\n      else\n        this.countDownTimer = '0:0' + startSec;\n      if( startSec > 0 )\n      {\n        this.startTimer(startSec);\n      }\n      else{\n        this.isBackable = true;\n      }\n    },1000);\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"default~pages-forgetpassword-forgetpassword-module~pages-landing-landing-module-es5.js"}