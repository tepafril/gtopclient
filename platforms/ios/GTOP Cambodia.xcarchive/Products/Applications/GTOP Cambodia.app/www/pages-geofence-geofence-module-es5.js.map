{"version":3,"sources":["src/app/pages/geofence/geofence.page.html","src/app/pages/geofence/geofence-routing.module.ts","src/app/pages/geofence/geofence.module.ts","src/app/pages/geofence/geofence.page.scss","src/app/pages/geofence/geofence.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header no-border>\\n  <ion-toolbar  color=\\\"primary\\\" mode=\\\"ios\\\">\\n\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"goBack()\\\">\\n        <ion-icon class=\\\"bell-button\\\" src=\\\"assets/themify-icons/SVG/arrow-left.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n\\n    <ion-title>\\n      {{ 'DISARM_PAGE.arm_disarm' | translate }}\\n    </ion-title>\\n\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n  <div id=\\\"map_canvas\\\">\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n\\n      <ion-fab-button color=\\\"success\\\" size=\\\"small\\\" class=\\\"marginBottom5\\\" (click)=\\\"enableResizableMarker()\\\" *ngIf=\\\"isResizable\\\">\\n        <ion-icon name=\\\"move-outline\\\"></ion-icon>\\n      </ion-fab-button>\\n\\n      <ion-fab-button color=\\\"success\\\" size=\\\"small\\\" class=\\\"marginBottom5 disabled\\\" *ngIf=\\\"!isResizable\\\">\\n        <ion-icon name=\\\"move-outline\\\"></ion-icon>\\n      </ion-fab-button>\\n\\n      <ion-fab-button color=\\\"primary\\\" size=\\\"small\\\" class=\\\"marginBottom5\\\" (click)=\\\"enableResizableMarker()\\\" *ngIf=\\\"!isResizable\\\">\\n        <ion-icon name=\\\"resize-outline\\\"></ion-icon>\\n      </ion-fab-button>\\n\\n      <ion-fab-button color=\\\"primary\\\" size=\\\"small\\\" class=\\\"marginBottom5 disabled\\\" *ngIf=\\\"isResizable\\\">\\n        <ion-icon name=\\\"resize-outline\\\"></ion-icon>\\n      </ion-fab-button>\\n\\n    </ion-fab>\\n  </div>\\n</ion-content>\\n\\n\\n<ion-footer>\\n\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-grid class=\\\"text-center\\\">\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>\\n            <h1>\\n              {{ distanceSize }} meter\\n            </h1>\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-toolbar>\\n\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GeofencePage } from './geofence.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GeofencePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GeofencePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GeofencePageRoutingModule } from './geofence-routing.module';\n\nimport { GeofencePage } from './geofence.page';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GeofencePageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [GeofencePage]\n})\nexport class GeofencePageModule {}\n","export default \"#map_canvas {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.disabled {\\n  opacity: 0.5;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90ZXBhZnJpbC9Eb2N1bWVudHMvZ3RvcGNsaWVudC9zcmMvYXBwL3BhZ2VzL2dlb2ZlbmNlL2dlb2ZlbmNlLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvZ2VvZmVuY2UvZ2VvZmVuY2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUNDSjs7QURFQTtFQUNJLFlBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2dlb2ZlbmNlL2dlb2ZlbmNlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNtYXBfY2FudmFzIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5kaXNhYmxlZHtcbiAgICBvcGFjaXR5OiAwLjU7XG59IiwiI21hcF9jYW52YXMge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uZGlzYWJsZWQge1xuICBvcGFjaXR5OiAwLjU7XG59Il19 */\"","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Platform, NavController, ModalController, LoadingController } from \"@ionic/angular\";\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { interval, Subscription } from 'rxjs';\n\nimport {\n  GoogleMaps,\n  GoogleMap,\n  GoogleMapsEvent,\n  ILatLng,\n  Circle,\n  Marker,\n  Spherical,\n  MarkerIcon,\n  LatLng\n} from '@ionic-native/google-maps';\n\n\n@Component({\n  selector: 'app-geofence',\n  templateUrl: './geofence.page.html',\n  styleUrls: ['./geofence.page.scss'],\n})\nexport class GeofencePage implements OnInit {\n\n  loading;\n  map: GoogleMap;\n  subscription: Subscription;\n\n  public circle: Circle;\n  public userMarker: Marker;\n  public userPosition = {\"lat\": 0, \"lng\": 0};\n  public watchUserPositionInc = 0;\n  public distanceSize = 500;\n\n  isResizable = false;\n\n  constructor(\n    private platform: Platform,\n    private navCtrl: NavController,\n    private _ngZone: NgZone,\n    private geolocation: Geolocation,\n    private loadingController: LoadingController\n  ) { }\n\n  goBack()\n  {\n    this.navCtrl.navigateBack('dashboard/tabs/home');\n  }\n\n  async ngOnInit()\n  {\n    await this.platform.ready();\n    await this.loadMap();\n  }\n\n  loadMap()\n  {\n    // Present Preloading\n    this.presentLoading();\n\n    this.map = GoogleMaps.create('map_canvas', {\n      'camera': {\n        'padding': 100\n      },\n      'gestures': {\n        'scroll': true,\n        'tilt': true,\n        'rotate': true,\n        'zoom': true\n      }\n    });\n\n    this.map.one(GoogleMapsEvent.MAP_READY).then(()=>{\n      // Start Http Request\n      this.locateUser();\n\n      // Set Interval every 7.5 Second to get http request\n      const source = interval(7500);\n      this.subscription = source.subscribe(val => {\n        this.locateUser();\n      });\n    });\n\n  }\n\n  locateUser()\n  {\n    this.geolocation.getCurrentPosition().then(position=>{\n      if(position)\n      {\n        this.userPosition.lat = position.coords.latitude;\n        this.userPosition.lng = position.coords.longitude;\n        this.drawUserMarker();\n        this.watchUserPositionInc++;\n      }\n    }).catch(error=>{\n      console.log(error);\n    });\n  }\n\n\n  drawUserMarker()\n  {\n    if( this.watchUserPositionInc > 0 )\n    {\n      this.userMarker.setPosition( new LatLng( this.userPosition.lat, this.userPosition.lng ));\n      return;\n    }\n\n    let icon: MarkerIcon = {\n      url: \"assets/google/marker/current-location.png\",\n      size: {\n        width: 24,\n        height: 24\n      }\n    };\n    this.userMarker = this.map.addMarkerSync({\n      icon: icon,\n      position: {\n        lat: this.userPosition.lat,\n        lng: this.userPosition.lng\n      },\n      anchor: [12, 12]\n    });\n    this.userMarker.setIconAnchor(12,12);\n    this.userMarker.setIcon(icon);\n\n    this.drawCircle();\n  }\n\n  resizableMarker: Marker;\n  movableMarker: Marker;\n  drawCircle()\n  {\n    this.loading.dismiss();\n\n    let center: ILatLng = {\"lat\": this.userPosition.lat, \"lng\": this.userPosition.lng};\n\n    let positions: ILatLng[] = [0, 90, 180, 270].map((degree: number) => {\n      return Spherical.computeOffset(center, this.distanceSize, degree);\n    });\n\n    this.map.setOptions({\n      camera: {\n        target: positions,\n        padding: 100\n      }\n    });\n\n    this.circle = this.map.addCircleSync({\n      'clickable': true,\n      'center': center,\n      'radius': this.distanceSize,\n      'strokeColor' : '#00a850',\n      'strokeWidth': 4,\n      'fillColor' : '#00a85040'\n    });\n\n    let moveIcon: MarkerIcon = {\n      url: 'assets/google/marker/movableMarker.png',\n      size: {\n        width: 40,\n        height: 40\n      }\n    };\n    this.movableMarker = this.map.addMarkerSync({\n      icon: moveIcon,\n      position: this.circle.getCenter(),\n      draggable: true\n    });\n    this.movableMarker.setIconAnchor(20, 20);\n\n    this.movableMarker.bindTo(\"position\", this.circle, \"center\");\n\n  }\n\n\n  enableResizableMarker()\n  {\n    this.isResizable = !this.isResizable;\n    if( this.isResizable )\n    {\n      this.movableMarker.remove();\n      this.movableMarker = null;\n\n      let center: ILatLng = {\"lat\": this.userPosition.lat, \"lng\": this.userPosition.lng};\n      let positions: ILatLng[] = [0, 90, 180, 270].map((degree: number) => {\n        return Spherical.computeOffset(center, this.distanceSize, degree);\n      });\n\n      let resizeIcon: MarkerIcon = {\n        url: 'assets/google/marker/resizableMarker.png',\n        size: {\n          width: 40,\n          height: 40\n        }\n      };\n\n      this.resizableMarker = this.map.addMarkerSync({\n        icon: resizeIcon,\n        position: positions[0],\n        draggable: true,\n        title: ' Drag here'\n      });\n      this.resizableMarker.trigger(GoogleMapsEvent.MARKER_CLICK);\n      this.resizableMarker.setIconAnchor(20, 20);\n\n      this.resizableMarker.on('position_changed').subscribe((params: any) => {\n        this._ngZone.run(() => {\n          let newValue: ILatLng = <ILatLng>params[1];\n          this.distanceSize = Math.round(Spherical.computeDistanceBetween(center, newValue));\n          this.circle.setRadius(this.distanceSize);\n        });\n      });\n    }\n    else{\n      this.resizableMarker.remove();\n      this.resizableMarker = null;\n\n      let moveIcon: MarkerIcon = {\n        url: 'assets/google/marker/movableMarker.png',\n        size: {\n          width: 40,\n          height: 40\n        }\n      };\n      this.movableMarker = this.map.addMarkerSync({\n        icon: moveIcon,\n        position: this.circle.getCenter(),\n        draggable: true\n      });\n      this.movableMarker.setIconAnchor(20, 20);\n\n      this.movableMarker.bindTo(\"position\", this.circle, \"center\");\n\n      this.movableMarker.on('position_changed').subscribe((params: any) => {\n        let newValue: ILatLng = <ILatLng>params[1];\n        let positions: ILatLng[] = [0, 90, 180, 270].map((degree: number) => {\n          return Spherical.computeOffset(newValue, this.distanceSize, degree);\n        });\n        this.resizableMarker.setPosition(positions[0]);\n      });\n    }\n  }\n\n\n  async presentLoading() {\n    this.loading = await this.loadingController.create({\n      message: 'Please wait',\n      duration: 60000\n    });\n    await this.loading.present();\n  }\n\n\n}"],"sourceRoot":"webpack:///","file":"pages-geofence-geofence-module-es5.js"}