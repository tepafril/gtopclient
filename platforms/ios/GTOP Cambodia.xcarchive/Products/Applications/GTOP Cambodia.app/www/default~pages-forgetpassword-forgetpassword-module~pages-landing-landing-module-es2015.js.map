{"version":3,"sources":["./src/app/pages/forgetpassword/forgetpassword.page.html","./src/app/pages/forgetpassword/forgetpassword.page.scss","./src/app/pages/forgetpassword/forgetpassword.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,yNAA0J,qCAAqC,sPAAsP,oEAAoE,mEAAmE,kCAAkC,iLAAiL,4BAA4B,8LAA8L,MAAM,MAAM,MAAM,GAAG,0BAA0B,2PAA2P,+BAA+B,yEAAyE,gCAAgC,+KAA+K,4BAA4B,mNAAmN,MAAM,MAAM,MAAM,GAAG,0BAA0B,IAAI,kBAAkB,qPAAqP,+DAA+D,mEAAmE,8BAA8B,4KAA4K,sCAAsC,gMAAgM,4BAA4B,yLAAyL,MAAM,MAAM,MAAM,GAAG,0BAA0B,6C;;;;;;;;;;;;ACAx7F;AAAe,6GAA8C,mK;;;;;;;;;;;;;;;;;;;;;;ACAX;AACiC;AAIrB;AACF;AACL;AAC4B;AAOnF,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAc7B,YACU,eAAgC,EAChC,iBAAoC,EACpC,YAA0B,EAC1B,WAAwB,EACxB,OAAsB,EACtB,IAAsB,EACtB,sBAA8C;QAN9C,oBAAe,GAAf,eAAe,CAAiB;QAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAe;QACtB,SAAI,GAAJ,IAAI,CAAkB;QACtB,2BAAsB,GAAtB,sBAAsB,CAAwB;QAjBxD,WAAM,GAAG,KAAK,CAAC;QAIf,eAAU,GAAG,KAAK,CAAC;QACnB,kBAAa,GAAG,KAAK,CAAC;QAEf,mBAAc,GAAU,MAAM,CAAC;IAYtC,CAAC;IAED,QAAQ;IACR,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;IACjC,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;IAC/B,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,MAAM,EACrB;YACE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,QAAQ,CAAC,CAAC;YACtF,OAAO;SACR;QACD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC,EAAE,QAAQ,CAAC,CAAC;YAC1F,OAAO;SACR;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE;YAC/D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAE3C,kCAAkC;YAClC,6BAA6B;YAC7B,kCAAkC;YAClC,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,EAAE;gBAC7F,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;gBACpB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBACvB,IAAI,CAAC,sBAAsB,GAAG,cAAc,CAAC;YAC/C,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gBACjB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,sCAAsC,GAAG,KAAK,GAAG,aAAa,EAAC,QAAQ,CAAC,CAAC;YAC1G,CAAC,CAAC,CAAC;YACH,kCAAkC;YAClC,iCAAiC;YACjC,kCAAkC;QAEpC,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;aAC9D;iBACG;gBACF,IAAI,CAAC,YAAY,CAAC,YAAY,CAAE,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;aACxD;YACD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2BAA2B;IAC3B,4BAA4B;IAC5B,MAAM;IACN,6FAA6F;IAC7F,cAAc;IACd,MAAM;IACN,2BAA2B;IAC3B,8GAA8G;IAC9G,gEAAgE;IAChE,mEAAmE;IACnE,yCAAyC;IACzC,yEAAyE;IACzE,oBAAoB;IACpB,sCAAsC;IACtC,sBAAsB;IACtB,qCAAqC;IACrC,4EAA4E;IAC5E,cAAc;IACd,kBAAkB;IAClB,sEAAsE;IACtE,cAAc;IACd,oCAAoC;IACpC,qBAAqB;IACrB,uCAAuC;IACvC,mFAAmF;IACnF,oCAAoC;IACpC,YAAY;IACZ,WAAW;IACX,0BAA0B;IAC1B,gCAAgC;IAChC,0DAA0D;IAC1D,YAAY;IACZ,wBAAwB;IACxB,8BAA8B;IAC9B,wDAAwD;IACxD,QAAQ;IACR,IAAI;IAEJ,+BAA+B;IAC/B,4BAA4B;IAC5B,MAAM;IACN,6FAA6F;IAC7F,cAAc;IACd,MAAM;IACN,0CAA0C;IAC1C,2GAA2G;IAC3G,cAAc;IACd,MAAM;IACN,6DAA6D;IAC7D,mGAAmG;IACnG,cAAc;IACd,MAAM;IACN,2BAA2B;IAC3B,yCAAyC;IACzC,wHAAwH;IACxH,gBAAgB;IAChB,kCAAkC;IAClC,qFAAqF;IACrF,iFAAiF;IACjF,wCAAwC;IAExC,2EAA2E;IAC3E,qDAAqD;IACrD,YAAY;IACZ,gFAAgF;IAChF,mDAAmD;IACnD,YAAY;IAEZ,oBAAoB;IACpB,kCAAkC;IAClC,0EAA0E;IAC1E,eAAe;IACf,oEAAoE;IACpE,kCAAkC;IAClC,YAAY;IACZ,kBAAkB;IAClB,gCAAgC;IAChC,wEAAwE;IACxE,aAAa;IACb,kEAAkE;IAClE,gCAAgC;IAChC,iBAAiB;IACjB,gCAAgC;IAChC,QAAQ;IACR,OAAO;IACP,IAAI;IAEE,cAAc;;YAClB,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBACjD,OAAO,EAAE,aAAa;gBACtB,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YACH,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC/B,CAAC;KAAA;IAED,UAAU,CAAC,QAAQ;QACjB,UAAU,CAAC,GAAG,EAAE;YACd,QAAQ,EAAG,CAAC;YACZ,IAAI,QAAQ,GAAG,EAAE;gBACf,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,QAAQ,CAAC;;gBAEtC,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,QAAQ,CAAC;YACzC,IAAI,QAAQ,GAAG,CAAC,EAChB;gBACE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;aAC3B;iBACG;gBACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;QACH,CAAC,EAAC,IAAI,CAAC,CAAC;IACV,CAAC;CAEF;;YAjL4B,8DAAe;YACb,gEAAiB;YACtB,2EAAY;YACb,yEAAW;YACf,4DAAa;YAChB,oEAAgB;YACE,gGAAsB;;AArB7C,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,0OAAyC;;KAE1C,CAAC;2EAgB2B,8DAAe;QACb,gEAAiB;QACtB,2EAAY;QACb,yEAAW;QACf,4DAAa;QAChB,oEAAgB;QACE,gGAAsB;GArB7C,kBAAkB,CAgM9B;AAhM8B","file":"default~pages-forgetpassword-forgetpassword-module~pages-landing-landing-module-es2015.js","sourcesContent":["export default \"<ion-content>\\n  <img src=\\\"/assets/header-logo-blue.jpg\\\" class=\\\"ion-hide-md-up\\\">\\n\\n  <ion-text color=\\\"dark\\\">\\n    <h2 class=\\\"ion-text-center\\\">{{ 'APP.forgot_password' | translate }}</h2>\\n  </ion-text>\\n\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"sendOTP(form)\\\" method=\\\"post\\\" class=\\\"ion-padding\\\" *ngIf=\\\"!isSent && !isPinVerified\\\">\\n    <ion-item>\\n      <ion-text color=\\\"primary\\\">\\n        <h5 class=\\\"ion-text-center\\\">{{ 'FORGOT_PASSWORD_PAGE.enter_phone_to_reset_password' | translate }}</h5>\\n      </ion-text>\\n      <ion-label position=\\\"floating\\\">{{ 'APP.phone_number' | translate }}</ion-label>\\n      <ion-input ngModel type=\\\"tel\\\" name=\\\"phone\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-button expand=\\\"full\\\" color=\\\"primary\\\" type=\\\"submit\\\">{{ 'APP.submit' | translate }}</ion-button>\\n    <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" expand=\\\"full\\\" (click)=\\\"dismissForgetPassword()\\\"><ion-icon  src=\\\"assets/themify-icons/SVG/arrow-left.svg\\\"></ion-icon> &nbsp;&nbsp;&nbsp;&nbsp; {{ 'APP.back' | translate }}</ion-button>\\n  </form>\\n\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"verifyOTP(form)\\\" method=\\\"post\\\" class=\\\"ion-padding\\\" *ngIf=\\\"isSent && !isPinVerified\\\">\\n    <ion-item>\\n      <ion-text color=\\\"primary\\\">\\n        <h5 class=\\\"ion-text-center\\\">{{ 'APP.enter_otp' | translate }}</h5>\\n      </ion-text>      \\n      <ion-label position=\\\"floating\\\">{{ 'APP.otp_number' | translate }}</ion-label>\\n      <ion-input ngModel type=\\\"tel\\\" name=\\\"otp\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-button expand=\\\"full\\\" color=\\\"primary\\\" type=\\\"submit\\\">{{ 'APP.submit' | translate }}</ion-button>\\n    <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" expand=\\\"full\\\" (click)=\\\"backToSendingOTP()\\\" [disabled]=\\\"isBackable\\\"><ion-icon  src=\\\"assets/themify-icons/SVG/arrow-left.svg\\\"></ion-icon> &nbsp;&nbsp;&nbsp;&nbsp; {{ 'APP.back' | translate }} ({{ countDownTimer }})</ion-button>\\n  </form>\\n\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"resetPassword(form)\\\" method=\\\"post\\\" class=\\\"ion-padding\\\" *ngIf=\\\"isPinVerified\\\">\\n    <ion-item>\\n      <ion-text color=\\\"primary\\\">\\n        <h5 class=\\\"ion-text-center\\\">{{ 'FORGOT_PASSWORD_PAGE.enter_phone_new_password' | translate }}</h5>\\n      </ion-text>\\n      <ion-label position=\\\"floating\\\">{{ 'APP.password' | translate }}</ion-label>\\n      <ion-input ngModel type=\\\"password\\\" name=\\\"password\\\" required></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">{{ 'APP.confirm_password' | translate }}</ion-label>\\n      <ion-input ngModel type=\\\"password\\\" name=\\\"confirmPassword\\\" required></ion-input>\\n    </ion-item>\\n\\n    <ion-button expand=\\\"full\\\" color=\\\"primary\\\" type=\\\"submit\\\">{{ 'APP.submit' | translate }}</ion-button>\\n    <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" expand=\\\"full\\\" (click)=\\\"backToSendingOTP()\\\"><ion-icon  src=\\\"assets/themify-icons/SVG/arrow-left.svg\\\"></ion-icon> &nbsp;&nbsp;&nbsp;&nbsp; {{ 'APP.back' | translate }}</ion-button>\\n  </form>\\n\\n</ion-content>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ZvcmdldHBhc3N3b3JkL2ZvcmdldHBhc3N3b3JkLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ModalController, NavController, LoadingController } from '@ionic/angular';\nimport { NgForm } from '@angular/forms';\nimport { LoginPage } from '../login/login.page';\nimport * as firebase from 'firebase';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FirebaseAuthentication } from '@ionic-native/firebase-authentication/ngx';\n\n@Component({\n  selector: 'app-forgetpassword',\n  templateUrl: './forgetpassword.page.html',\n  styleUrls: ['./forgetpassword.page.scss'],\n})\nexport class ForgetpasswordPage implements OnInit {\n\n  firebaseVerificationId;\n  fireabaseTokenId;\n  isSent = false;\n  phoneNumber;\n  password;\n  loading;\n  isBackable = false;\n  isPinVerified = false;\n  httpResponse:any;\n  public countDownTimer:string = '0:59';\n\n\n  constructor(\n    private modalController: ModalController,\n    private loadingController: LoadingController,\n    private alertService: AlertService,\n    private authService: AuthService,\n    private navCtrl: NavController,\n    private lang: TranslateService,\n    private firebaseAuthentication: FirebaseAuthentication\n  ) {\n  }\n\n  ngOnInit() {  \n  }\n\n  dismissForgetPassword() {\n    this.modalController.dismiss();\n  }\n\n  backToSendingOTP() {\n    this.isSent = false;\n    this.isPinVerified = false;\n    this.countDownTimer = '0:59';\n  }\n\n  sendOTP(form: NgForm){\n    this.phoneNumber = form.value.phone;\n    if( !navigator.onLine )\n    {\n      this.alertService.presentToast( this.lang.instant('APP.internet_not_work') ,\"danger\");\n      return;\n    }\n    if( this.phoneNumber.length < 9 ){\n      this.alertService.presentToast( this.lang.instant('APP.please_validate_phone') ,\"danger\");\n      return;\n    }\n    this.presentLoading();\n    this.authService.verifyPhone(this.phoneNumber).subscribe( data => {\n      this.httpResponse = data;\n      this.phoneNumber = this.httpResponse.phone;\n\n      // *******************************\n      // Firebase Start Sending OTP\n      // *******************************\n      this.firebaseAuthentication.verifyPhoneNumber(this.phoneNumber, 30000).then((verificationID) => {\n        this.isSent = true;\n        this.startTimer(60);\n        this.loading.dismiss();\n        this.firebaseVerificationId = verificationID;\n      }).catch((error) => {\n        this.alertService.presentToast(\"<ion-text class=\\\"ion-text-center\\\">\" + error + \"</ion-text>\",\"danger\");\n      });\n      // *******************************\n      // END Firebase Start Sending OTP\n      // *******************************\n      \n    }, err => {\n      if( err.error.message ){\n        this.alertService.presentToast( err.error.message ,\"danger\");\n      }\n      else{\n        this.alertService.presentToast( err.message ,\"danger\");\n      }\n      this.loading.dismiss();\n    });\n  }\n\n  // verifyOTP(form: NgForm){\n  //   if( !navigator.onLine )\n  //   {\n  //     this.alertService.presentToast( this.lang.instant('APP.internet_not_work') ,\"danger\");\n  //     return;\n  //   }\n  //   this.presentLoading();\n  //   let credential = firebase.auth.PhoneAuthProvider.credential(this.firebaseVerificationId, form.value.otp);\n  //   firebase.auth().signInWithCredential(credential).then(()=>{\n  //     firebase.auth().currentUser.getIdToken(true).then(idToken=>{\n  //       this.fireabaseTokenId = idToken;\n  //       this.authService.verifyToken( this.fireabaseTokenId ).subscribe(\n  //         data => {\n  //           this.httpResponse = data;\n  //         }, err => {\n  //           if( err.error.message ){\n  //             this.alertService.presentToast( err.error.message ,\"danger\");\n  //           }\n  //           else{\n  //             this.alertService.presentToast( err.message ,\"danger\");\n  //           }\n  //           this.loading.dismiss();\n  //         }, () => {\n  //           this.isPinVerified = true;\n  //           this.alertService.presentToast( this.httpResponse.message ,\"success\");\n  //           this.loading.dismiss();\n  //         }\n  //       );\n  //     }).catch(error => {\n  //       this.loading.dismiss();\n  //       this.alertService.presentToast( error ,\"danger\");\n  //     });  \n  //   }).catch((error)=>{\n  //     this.loading.dismiss();\n  //     this.alertService.presentToast( error ,\"danger\");\n  //   });\n  // }\n\n  // resetPassword(form: NgForm){\n  //   if( !navigator.onLine )\n  //   {\n  //     this.alertService.presentToast( this.lang.instant('APP.internet_not_work') ,\"danger\");\n  //     return;\n  //   }\n  //   if( form.value.password.length < 6 ){\n  //     this.alertService.presentToast( this.lang.instant('APP.password_must_be_greater_than_6') ,\"danger\");\n  //     return;\n  //   }\n  //   if( form.value.password != form.value.confirmPassword ){\n  //     this.alertService.presentToast( this.lang.instant('APP.password_does_not_match') ,\"danger\");\n  //     return;\n  //   }\n  //   this.presentLoading();\n  //   this.password = form.value.password;\n  //   this.authService.resetPassword( this.fireabaseTokenId, form.value.password, form.value.confirmPassword ).subscribe(\n  //     data => {\n  //       this.httpResponse = data;\n  //       this.authService.login(this.phoneNumber, this.password).subscribe( data => {\n  //         this.alertService.presentToast( this.httpResponse.message ,\"success\");\n  //         this.dismissForgetPassword();\n          \n  //         if(this.authService.isLoggedIn && this.authService.isVerified) {\n  //           this.navCtrl.navigateRoot('/dashboard');\n  //         }\n  //         else if(this.authService.isLoggedIn && !this.authService.isVerified){\n  //           this.navCtrl.navigateRoot('/pending');\n  //         }\n          \n  //       }, err => {\n  //         if( err.error.message )\n  //           this.alertService.presentToast( err.error.message ,\"danger\");\n  //         else\n  //           this.alertService.presentToast( err.message ,\"danger\");\n  //         this.loading.dismiss();\n  //       });\n  //     }, err => {\n  //       if( err.error.message )\n  //         this.alertService.presentToast( err.error.message ,\"danger\");\n  //       else\n  //         this.alertService.presentToast( err.message ,\"danger\");\n  //       this.loading.dismiss();\n  //     }, () => {\n  //       this.loading.dismiss();\n  //     }\n  //   );\n  // }\n\n  async presentLoading() {\n    this.loading = await this.loadingController.create({\n      message: 'Please wait',\n      duration: 30000\n    });\n    await this.loading.present();\n  }\n\n  startTimer(startSec) {\n    setTimeout(() => {\n      startSec --;\n      if( startSec > 10 )\n        this.countDownTimer = '0:' + startSec;\n      else\n        this.countDownTimer = '0:0' + startSec;\n      if( startSec > 0 )\n      {\n        this.startTimer(startSec);\n      }\n      else{\n        this.isBackable = true;\n      }\n    },1000);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}